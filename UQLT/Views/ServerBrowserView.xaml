<UserControl x:Class="UQLT.Views.ServerBrowserView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:helpers="clr-namespace:UQLT.Helpers"
             mc:Ignorable="d"
             d:DesignHeight="550" d:DesignWidth="1090">

    <UserControl.Resources>
        <!--Template for Red/Blue Team Colors-->
        <DataTemplate x:Key="TeamColors">
            <Border x:Name="TeamBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="1">
                <TextBlock Foreground="White" Text="{Binding TeamName}"/>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Team}" Value="0">
                    <Setter Property="Background" TargetName="TeamBorder" Value="LightGray"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Team}" Value="1">
                    <Setter Property="Background" TargetName="TeamBorder" Value="#66FF1D1D"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Team}" Value="2">
                    <Setter Property="Background" TargetName="TeamBorder" Value="#66000CFF"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Team}" Value="3">
                    <Setter Property="Background" TargetName="TeamBorder" Value="LightGray"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <!--Template for displaying proper score formatting (i.e. Race times)-->
        <DataTemplate x:Key="ScoreTemplate">
            <TextBlock>
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource ScoreToRace}">
                        <Binding Path="IsRacing"/>
                        <Binding Path="Score" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </DataTemplate>
        <!--Template for displaying extended server details-->
        <DataTemplate x:Key="extendedDetailsTemplate">

            <StackPanel Margin="12,0,0,0">
                <StackPanel Orientation="Vertical">
                    <Image Name="MapImage" Width="112" Height="84" Source="{Binding MapImage}" Margin="0,0,0,0" />
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Map: " FontWeight="Bold" />
                        <TextBlock Text="{Binding Path=MapTitle}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Location: " FontWeight="Bold" />
                        <TextBlock Text="{Binding FullLocationName}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Ping: " FontWeight="Bold" />
                        <TextBlock Text="{Binding Ping}" Foreground="{Binding Ping, Converter={StaticResource PingToColor}}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Mode: " FontWeight="Bold" />
                        <TextBlock Text="{Binding GameTypeTitle}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding GameType, Converter={StaticResource GameTypeToRound}}" FontWeight="Bold" />
                        <TextBlock Text="{Binding RoundLimit}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Game Status: " FontWeight="Bold" />
                        <TextBlock Text="{Binding FormattedGameState}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Time Left: " FontWeight="Bold" />
                        <TextBlock Text="{Binding TimeRemaining}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Players: " FontWeight="Bold" />
                        <TextBlock Text="{Binding TotalPlayers}" />
                    </StackPanel>
                    <StackPanel x:Name="TeamScoreboard" Orientation="Vertical" Margin="0,10,5,5">

                        <TextBlock FontWeight="Bold" HorizontalAlignment="Center">
                                Team Scoreboard
                                <LineBreak />
                        </TextBlock>

                        <!--Red score greater than blue score. Display red first.-->
                        <StackPanel x:Name="RedLeadingScore" Visibility="{Binding IsRedTeamLeading, Converter={StaticResource BoolToVis}}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Red: " FontWeight="Bold" />
                                <TextBlock Text="{Binding RedTeamEloAsAsyncValue.Result, StringFormat='({0} Elo): '}" Visibility="{Binding IsQlRanksSupportedTeamGame, Converter={StaticResource BoolToVis}}" Foreground="{Binding RedTeamEloAsAsyncValue.Result, Converter={StaticResource EloToColor}}"/>
                                <TextBlock Text="{Binding GRedScore}" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Blue: " FontWeight="Bold" />
                                <TextBlock Text="{Binding BlueTeamEloAsAsyncValue.Result, StringFormat='({0} Elo): '}" Visibility="{Binding IsQlRanksSupportedTeamGame, Converter={StaticResource BoolToVis}}" Foreground="{Binding BlueTeamEloAsAsyncValue.Result, Converter={StaticResource EloToColor}}"/>
                                <TextBlock Text="{Binding GBlueScore}" />
                            </StackPanel>
                        </StackPanel>
                        <!--Blue score greater than red score. Display blue first.-->
                        <StackPanel x:Name="BlueLeadingScore" Visibility="{Binding IsBlueTeamLeading, Converter={StaticResource BoolToVis}}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Blue: " FontWeight="Bold" />
                                <TextBlock Text="{Binding BlueTeamEloAsAsyncValue.Result, StringFormat='({0} Elo): '}" Visibility="{Binding IsQlRanksSupportedTeamGame, Converter={StaticResource BoolToVis}}" Foreground="{Binding BlueTeamEloAsAsyncValue.Result, Converter={StaticResource EloToColor}}"/>
                                <TextBlock Text="{Binding GBlueScore}" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Red: " FontWeight="Bold" />
                                <TextBlock Text="{Binding RedTeamEloAsAsyncValue.Result, StringFormat='({0} Elo): '}" Visibility="{Binding IsQlRanksSupportedTeamGame, Converter={StaticResource BoolToVis}}" Foreground="{Binding RedTeamEloAsAsyncValue.Result, Converter={StaticResource EloToColor}}"/>
                                <TextBlock Text="{Binding GRedScore}" />
                            </StackPanel>


                        </StackPanel>

                    </StackPanel>
                </StackPanel>
            </StackPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsTeamGame}" Value="False">
                    <Setter TargetName="TeamScoreboard" Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </UserControl.Resources>

    <Grid Width="1040" x:Name="ServerBrowserRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="31*" />
            <RowDefinition Height="30*"/>
            <RowDefinition Height="31*" />
            <RowDefinition Height="250*"/>
            <RowDefinition Height="250*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="820*" />
            <ColumnDefinition Width="270*" />
        </Grid.ColumnDefinitions>

        <!--Server refresh options-->
        <StackPanel Orientation="Horizontal" Grid.Row="0">
            <CheckBox x:Name="RefreshCheckBox" Content="Auto-refresh servers" IsChecked="{Binding IsAutoRefreshEnabled}" Margin="0,6,0,8" Padding="2,0,10,0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Checked">
                        <cal:ActionMessage MethodName="SaveConfig" />
                        <cal:ActionMessage MethodName="StartServerRefreshTimer" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Unchecked">
                        <cal:ActionMessage MethodName="SaveConfig" />
                        <cal:ActionMessage MethodName="StopServerRefreshTimer" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </CheckBox>
            <ComboBox x:Name="RefreshComboBox" ItemsSource="{Binding AutoRefreshItems}" SelectedIndex="{Binding AutoRefreshIndex}" SelectedValuePath="Seconds" Width="180" ShouldPreserveUserEnteredPrefix="True" Margin="0,2,0,3" Visibility="{Binding IsAutoRefreshEnabled, Converter={StaticResource BoolToVis}}">
                <ComboBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel/>
                    </ItemsPanelTemplate>
                </ComboBox.ItemsPanel>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <cal:ActionMessage MethodName="SetRefreshTime">
                            <cal:Parameter Value="{Binding ElementName=RefreshComboBox, Path=SelectedValue}" />
                        </cal:ActionMessage>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <Button Content="Refresh All Servers" Height="20" Margin="30,0,0,0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <cal:ActionMessage MethodName="RefreshAllServers"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
        </StackPanel>

        <!--Elo search filter-->
        <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Left">
            <CheckBox x:Name="EloSearchCheckBox" Content="Show Elo search options" IsChecked="{Binding DisplayEloSearchOptions}" Margin="0,0,0,2" Height="18">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Checked">
                        <cal:ActionMessage MethodName="SaveConfig" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Unchecked">
                        <cal:ActionMessage MethodName="ClearAndResetEloSearchValue"/>
                        <cal:ActionMessage MethodName="SaveConfig" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </CheckBox>
        </StackPanel>
        <StackPanel Orientation="Horizontal" Grid.Row="2" Visibility="{Binding DisplayEloSearchOptions, Converter={StaticResource BoolToVis}}" Margin="0,0,0,3">
                <TextBlock Text="Find servers containing: " Margin="10,5,0,0" Height="18"/>
                <ComboBox x:Name="EloSearchComboBox" ItemsSource="{Binding EloSearchItems}" SelectedIndex="{Binding EloSearchIndex}" SelectedValuePath="EloSearchGameType" ShouldPreserveUserEnteredPrefix="True" IsEnabled="{Binding IsSearchingEnabled, Converter={StaticResource BoolToVis}}" Margin="6,0,0,0" Height="20"  MinWidth="220">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <cal:ActionMessage MethodName="SetCurrentEloSearchSelection">
                                <cal:Parameter Value="{Binding ElementName=EloSearchComboBox, Path=SelectedValue}" />
                            </cal:ActionMessage>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <TextBox helpers:NumericTextBoxFilter.OnlyAllowNumbers="True" TextWrapping="Wrap" Text="{Binding EloSearchValue, UpdateSourceTrigger=PropertyChanged}" Width="60" Height="20" Margin="5,2,10,3" IsEnabled="{Binding IsSearchingEnabled}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="GotFocus">
                            <cal:ActionMessage MethodName="SetCurrentEloSearchSelection">
                                <cal:Parameter Value="{Binding ElementName=EloSearchComboBox, Path=SelectedValue}"/>
                            </cal:ActionMessage>
                        <cal:ActionMessage MethodName="EnableEloSearchFilter"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <Button Content="Clear" Margin="5,0,0,0" Height="20" IsEnabled="{Binding IsSearchingEnabled}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <cal:ActionMessage MethodName="ClearAndResetEloSearchValue"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </StackPanel>

        <!--Player search filter-->
        <StackPanel Orientation="Horizontal" Grid.Column="0"  Grid.Row="1" HorizontalAlignment="Center">
            <TextBlock Text="Find player by name:" Margin="0,0,10,0" Height="18"/>
            <TextBox TextWrapping="Wrap" Text="{Binding PlayerSearchTerm, UpdateSourceTrigger=PropertyChanged}" Width="120" Height="20" Margin="0,0,5,0" IsEnabled="{Binding IsSearchingEnabled}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="GotFocus">
                        <cal:ActionMessage MethodName="EnablePlayerSearchFilter"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <Button Content="Clear" Margin="5,0" Height="20" IsEnabled="{Binding IsSearchingEnabled}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <cal:ActionMessage MethodName="ClearAndResetPlayerSearchTerm"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
        </StackPanel>

        <!--Server Details-->
        <ListView x:Name="SBServerDetails" helpers:GridViewSort.AutoSort="True" HorizontalAlignment="Left" Width="770" IsSynchronizedWithCurrentItem="True" BorderThickness="0" SelectionMode="Single" SelectedIndex="0" ItemsSource="{Binding ServersView}" SelectedItem="{Binding SelectedServer}" Grid.Row="3" ScrollViewer.IsDeferredScrollingEnabled="True" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" Tag="{Binding DataContext, ElementName=ServerBrowserRoot}">
            <!--Resources for the Server Details context menu-->
            <ListView.ContextMenu>
                <ContextMenu cal:Action.TargetWithoutContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                    <MenuItem Header="Refresh this server" cal:Message.Attach="[Event Click] = [Action RefreshSelectedServer()]"/>
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Location" helpers:GridViewSort.PropertyName="FullLocationName">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image Name="FlagImage" Width="16" Height="11" Source="{Binding FlagImage}" Margin="0,0,5,0" />
                                    <!--<TextBlock Name="CountryName" Text="{Binding location_id, Converter={StaticResource LocIdToName}}" />-->
                                    <TextBlock Name="CountryName" Text="{Binding FullLocationName}" />
                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Ping" helpers:GridViewSort.PropertyName="Ping">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Ping}" Foreground="{Binding Ping, Converter={StaticResource PingToColor}}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Game Type" helpers:GridViewSort.PropertyName="GameTypeTitle">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image Name="GameTypeImage" Width="16" Height="16" Margin="0,0,3,0" Source="{Binding GameTypeImage}" />
                                    <TextBlock Name="GameTypeName" Text="{Binding GameTypeTitle}" />
                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Map" helpers:GridViewSort.PropertyName="Map" DisplayMemberBinding="{Binding Map}" />
                    <GridViewColumn Header="Players" helpers:GridViewSort.PropertyName="TotalPlayers">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding TotalPlayers}" Foreground="{Binding PlayerCount, Converter={StaticResource PlayerCountToColor}}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Server Name" helpers:GridViewSort.PropertyName="HostName" DisplayMemberBinding="{Binding HostName}" />

                    <GridViewColumn Header="Modded" helpers:GridViewSort.PropertyName="Modded" DisplayMemberBinding="{Binding Modded}" />
                    <GridViewColumn Header="Instagib" helpers:GridViewSort.PropertyName="Instagib" DisplayMemberBinding="{Binding Instagib}" />
                    <GridViewColumn Header="Id" helpers:GridViewSort.PropertyName="PublicId" DisplayMemberBinding="{Binding PublicId}" />
                    <GridViewColumn Header="Address" helpers:GridViewSort.PropertyName="HostAddress" DisplayMemberBinding="{Binding HostAddress}" />
                </GridView>
            </ListView.View>
        </ListView>
        <!--Player Details-->
        <ListView x:Name="SBPlayerDetails" helpers:GridViewSort.AutoSort="True" HorizontalAlignment="Left" Height="210" VerticalAlignment="Top" Width="770"
                  IsSynchronizedWithCurrentItem="True" ItemsSource="{Binding SelectedServer.FormattedPlayerList}" SelectionMode="Single" Grid.Row="4" ScrollViewer.IsDeferredScrollingEnabled="True" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling">
            <!--Provide player highlighting for players found in a player search-->
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlayerFoundInSearch}" Value="True">
                            <Setter Property="Background" Value="LemonChiffon"/>
                            <Setter Property="BorderBrush" Value="Goldenrod"/>
                        </DataTrigger>
                        <!--TODO: Highlight friends as well-->
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>


            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Team" helpers:GridViewSort.PropertyName="Team" CellTemplate="{StaticResource TeamColors}" />
                    <GridViewColumn Header="Clan" helpers:GridViewSort.PropertyName="Clan" DisplayMemberBinding="{Binding CleanedClan}" />
                    <GridViewColumn Header="Name" helpers:GridViewSort.PropertyName="Name">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image Name="AcctTypeImage" Width="36" Height="12" Source="{Binding AccountImage}" Margin="0,0,5,0" />
                                    <TextBlock Text="{Binding Name}" />
                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Score" helpers:GridViewSort.PropertyName="Score" CellTemplate="{StaticResource ScoreTemplate}" Width="80" />
                    <GridViewColumn Header="Elo" helpers:GridViewSort.PropertyName="PlayerElo" Width="{Binding Path=SelectedServer.IsQlRanksSupportedAllGames, Converter={StaticResource QlRanksTypeToVis}, ConverterParameter=85}">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding PlayerElo}" Foreground="{Binding PlayerElo, Converter={StaticResource EloToColor}}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
        <!--Extended server details-->
        <ContentControl x:Name="SBExtendedInfo" Content="{Binding SelectedServer}" ContentTemplate="{StaticResource extendedDetailsTemplate}" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="1" Height="420" Width="270" Grid.RowSpan="3" Grid.Row="2" Margin="0,0,-12,0" />

        <!--"Receiving QL server data" grid-->
        <Grid ColumnSpan="2" Grid.RowSpan="3" Visibility="{Binding IsUpdatingServers, Converter={StaticResource BoolToVis}}" Background="Gray" Opacity=".6" Grid.Row="3">

            <Border Background="#333" Width="450" VerticalAlignment="Center" BorderBrush="Red" BorderThickness="2" Height="98" HorizontalAlignment="Center" Margin="295,114,295,254">
                <TextBlock Foreground="White" FontSize="14" Width="450" VerticalAlignment="Center" HorizontalAlignment="Center"
            		Text="Receiving Quake Live server data... Please wait." Padding="20,0,0,0" Margin="8,28,-12,28" />
            </Border>
            <!--<TextBlock Foreground="Red" FontSize="14" Width="400" VerticalAlignment="Center" HorizontalAlignment="Center"
                   Text="{Binding NumberOfServersToUpdate, StringFormat='Updating servers (total: {0})'}" />-->
        </Grid>
    </Grid>
</UserControl>